version: '2.1'
services:
  db:
    hostname: db.magento2.docker
    image: 'mysql:8'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    ports:
      - '3307:3306'
    volumes:
      - './deserted:/app:delegated'
      - './.docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d'
    healthcheck:
      test: 'mysqladmin ping -h localhost'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker
  redis:
    hostname: redis.magento2.docker
    image: 'redis:6.2'
    volumes:
      - './deserted:/app:delegated'
    ports:
      - 6379
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  fpm:
    hostname: fpm.magento2.docker
    build: '.docker/PHP/'
    extends: generic
    volumes:
      - './deserted:/app:delegated'
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      db:
        condition: service_healthy

  fpm_xdebug:
    hostname: fpm_xdebug.magento2.docker
    image: 'magento/magento-cloud-docker-php:8.1-fpm-1.3.2'
    extends: generic
    ports:
      - '9001:9001'
    volumes:
      - './deserted:/app'
    environment:
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium xdebug'
      - 'XDEBUG_CONFIG=remote_host=host.docker.internal remote_autostart=On remote_enable=On idekey=XDEBUG remote_log=/tmp/xdebug.log remote_port=9000'
    networks:
      magento:
        aliases:
          - fpm_xdebug.magento2.docker
    depends_on:
      db:
        condition: service_started

  web:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.3.2'
    extends: generic
    ports:
      - '80:80'
    volumes:
      - './deserted:/app:delegated'
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      fpm:
        condition: service_started
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
      - WITH_XDEBUG=1
  varnish:
    hostname: varnish.magento2.docker
    image: 'magento/magento-cloud-docker-varnish:latest-1.2'
    networks:
      magento:
        aliases:
          - magento2.docker
    volumes:
      - './deserted/pub:/etc/varnish'
    depends_on:
      - 'web'
  tls:
    hostname: tls.magento2.docker
    image: 'magento/magento-cloud-docker-tls:latest-1.1'
    ports:
      - '443:443'
    environment:
      HTTPS_UPSTREAM_SERVER_ADDRESS: varnish
    networks:
      magento:
        aliases:
          - tls.magento2.docker
    depends_on:
      varnish:
        condition: service_started
  generic:
    hostname: generic.magento2.docker
    image: 'alpine:latest'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
  build:
    hostname: build.magento2.docker
    image: 'magento/magento-cloud-docker-php:8.1-cli-1.3.2'
    extends: generic
    volumes:
      - './deserted:/app:delegated'
    networks:
      magento-build:
        aliases:
          - build.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  deploy:
    hostname: deploy.magento2.docker
    image: 'magento/magento-cloud-docker-php:8.1-cli-1.3.2'
    extends: generic
    volumes:
      - './deserted:/app:delegated'
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  mailhog:
    hostname: mailhog.magento2.docker
    image: 'mailhog/mailhog:latest'
    restart: on-failure
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      magento:
        aliases:
          - mailhog.magento2.docker

  elasticsearch:
    hostname: elasticsearch.magento2.docker
    image: 'magento/magento-cloud-docker-elasticsearch:7.11-1.3.2'
    networks:
      magento:
        aliases:
          - elasticsearch.magento2.docker
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      - cluster.name=es-docker
      - node.name=node1
    mem_limit: 4G
volumes:
  deserted:
    driver_opts:
      type: none
      device: '${PWD}/deserted'
      o: bind
  mymagento-magento-db: {  }
  mymagento-maento: {  }
networks:
  magento:
    driver: bridge
  magento-build:
    driver: bridge
